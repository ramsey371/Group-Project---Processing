let handPose;
let classifier;
let video;
let hands = [];

function preload() {
  // Load the handPose model
  handPose = ml5.handPose();
  classifier = ml5.imageClassifier( "https://teachablemachine.withgoogle.com/models/18YRBQ1ME/") ;
}

// Callback function for when handPose outputs data
function gotHands(results) {
  // save the output to the hands variable
  hands = results;
}

function gotResults(results) {
  console.log(results);
  
  // Check if results are available
  if (results.length > 0) {
    // Save the first result's label
    label = results[0].label;

    // If the result contains hand information, pass it to gotHands
    if (results[0].hands) {
      gotHands(results[0].hands);
    }
  }
}

function setup() {
  createCanvas(640, 480);
  // Create the webcam video and hide it
  video = createCapture(VIDEO);
  video.size(640, 480);
  video.hide();
  // start detecting hands from the webcam video
  handPose.detectStart(video, gotHands);
  classifier.classifyStart(video, gotResults);

}

function draw() {
  background(220);
  // Draw the webcam video
  image(video, 0, 0, width, height);

  // Draw all the tracked hand points
  for (let i = 0; i < hands.length; i++) {
    let hand = hands[i];
    for (let j = 0; j < hand.keypoints.length; j++) {
      let keypoint = hand.keypoints[j];
      rectMode(CENTER);
      fill(0, 255, 0);
      rect(width / 2, height - 50, width, 50);
      textSize(32);
      fill(255);
      textAlign(CENTER, CENTER);
      noStroke();
      circle(keypoint.x, keypoint.y, 10);
      text(label, width / 2, height - 50);
    }
  }
}

